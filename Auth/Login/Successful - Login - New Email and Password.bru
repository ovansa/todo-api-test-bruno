meta {
  name: Successful - Login - New Email and Password
  type: http
  seq: 2
}

post {
  url: {{BASE_URL}}/auth/login
  body: json
  auth: inherit
}

headers {
  accept: application/json
  Content-Type: application/json
}

body:json {
  {
    "email": "{{newEmail}}",
    "password": "{{newPassword}}"
  }
}

script:pre-request {
  const axios = require("axios");
  
  const randomNumber = Math.floor(1000 + Math.random() * 9000);
  
  const firstNames = ['John', 'Jane', 'Alice', 'Bob', 'Diana'];
  const lastNames = ['Smith', 'Brown', 'Taylor', 'Lee', 'Johnson'];
  const fullName = `${firstNames[Math.floor(Math.random() * firstNames.length)]} ${lastNames[Math.floor(Math.random() * lastNames.length)]}`;
  
  const email = `user${randomNumber}@example.com`;
  const password = `Password123`;
  
  const response = await axios.post(`${bru.getEnvVar("BASE_URL")}/auth/register`, {
    email,
    fullName,
    password
  }, {
    headers: {
      'accept': 'application/json',
      'content-type': 'application/json'
    }
  });
  
  console.log(`New Registration Successful`, response.data);
  
  bru.setVar("newEmail", email);
  bru.setVar("newFullName", fullName);
  bru.setVar("newPassword", password);
}

tests {
  test("Login response should return status code 200", () => {
    expect(res.getStatus()).to.equal(200);
  });
  
  test("Login response should contain a token", () => {
    expect(res.getBody()).to.have.property("token").that.is.a("string");
    expect(res.getBody().token).to.not.be.empty;
  });
}
